{{> layout/header}}
<style>
</style>

<div class="container sub-page" style="text-align: center">
    <div class="cart-w d-flex">
        <div class="cart-L">
            <table class="table table-striped" style="vertical-align: middle; text-align: center">
                <tr>
                    <th>번호</th>
                    <th>상품명</th>
                    <th>구매수량</th>
                    <th>상품가격</th>
                    <th>구매금액</th>
                    <th>선택하기</th>
                </tr>

                {{#cartList}}
                    <tr class="cart-table my-cart-list" id="cart-{{id}}">
                        <td>{{indexNum}}</td>
                        <input type="hidden" class="cartId" name="cartId" value="{{id}}">
                        <input type="hidden" class="optionId" name="optionId" value="{{optionId}}">
                        <span class="notVisible">{{id}}</span>
                        <td>
                            <div style="width:150px; margin:0 auto;">
                                <img src="/upload/{{img}}" alt="Product Image"
                                     style="max-width: 100%; max-height: 100%;">
                            </div>
                            {{pName}}
                        </td>

                        <td>
                            <!-- 상품의 구매 수량만큼 표시됩니다 value 명에 변수 값만 넣어주세요-->
                            <div class="quantity-controls d-flex"
                                 style="width: 100px; text-align: center; margin:0 auto">
                                <button type="button" class="decrease-btn" aria-label="수량내리기" style="">-
                                </button>
                                <input type="text" class="quantity orderQty orderQty-change orderQty-class"
                                       id="orderQty"
                                       name="orderQty" data-order-qty="{{orderQty}}"
                                       value="{{orderQty}}"
                                       style="text-align: center; ">
                                <button type="button" class="increase-btn" aria-label="수량올리기">+</button>
                            </div>
                        </td>

                        <td class="price-class" id="price-item" data-price="{{price}}">{{price}}</td>

                        <td class="sum-class" id="sum-item" data-sum="{{sum}}">{{sum}}</td>

                        <td>
                            <input class="form-check-input product-checkbox item-check" type="checkbox" name="itemCheck"
                                   id="itemCheck-id" value="{{sum}}" checked
                                   style="width:20px !important; margin: 0 auto">
                        </td>
                    </tr>
                {{/cartList}}

            </table>
        </div>

        <div class="cart-R">
            <!-- 총합계 계산하는 것 -->
            <div class="summary-list">
                <!-- 목록 리스트 1-->
                <ul class="list-group mb-3">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div class="flex-fill">
                            <span style="padding-right: 40px; width:300px;">총 합계 (원)</span>
                            <strong class="totalSum" id="totalSum">0</strong>
                        </div>
                    </li>
                </ul>
            </div>
            <!-- 총합계 계산하는 것 -->

            <button type="button" class="btn btn-mint" id="purchaseButton" style="width:300px">주문하기</button>
        </div>

    </div>
</div>


<script>

    // cart-list 꺼
    let confirmOrder = {{confirmOrder}}; // 서버로부터 받은 confirmOrder 변수    //request에 담은거 ㅇㅇ
    if (confirmOrder) {
        let userResponse = confirm("기존 주문 내역이 있습니다. 마저 주문을 진행하시겠습니까?");
        if (userResponse) {
            window.location.href = "/order-save-form";
        } else {
            $.ajax({
                url: '/cart-list-update',
                data: JSON.stringify({status: "CART_ING"}),
                contentType: 'application/json; charset=utf-8',
                type: 'POST'

            }).done((res) => {
                console.log(res);
                window.location.href = "/cart-list";

            }).fail((res) => {

            });
        }
    }


    <!--    천단위 표시 재사용 해야할 함수 -->
    function numberWithCommas(total) {
        return total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }


    // 수량 변경하면 가격 변경되게
    $(".orderQty-class").on("input", function () {
        // alert("변경 감지");
        calculator(this);
    });

    $(document).on("click", `.increase-btn, .decrease-btn`, function () {
        let inputField = $(this).siblings(".orderQty-class");
        calculator(inputField);
    });


    function calculator(element) {
        let orderQty = $(element).val();
        // console.log("주문 수량 " + orderQty);

        let price = $(element).closest(`tr`).find(`.price-class`).data("price");
        // console.log("단가 " + price);

        let total = orderQty * price;
        // console.log("합계 " + total);

        // 수량이 변경되면 구매금액 반영
        $(element).closest(`tr`).find(`.sum-class`).text(numberWithCommas(total));

        // 체크박스 value 업데이트
        $(element).closest(`tr`).find(`.item-check`).val(total);

        // 수량이 변경되면 총합계 (총금액) 도 반영
        let totalSum = 0;

        $(".item-check:checked").each(function () {
            let sum = parseInt($(this).closest(`tr`).find(`.sum-class`).text().replace(/,/g, '')) || 0;
            // console.log("sum " + sum)
            totalSum += sum;
        });

        // console.log("totalSum " + totalSum);

        $("#totalSum").text(numberWithCommas(totalSum));

    }


    //재사용 함수
    function updateTotalSum() {
        // 체크박스에서 값 들어오는 jQuery
        let total = 0;
        $(".item-check:checked").each(function () {
            // let price = $(this).val();
            // console.log(price);
            total = total + parseInt($(this).val());
            // console.log(total);
        });
        $("#totalSum").text(numberWithCommas(total));
    }

    //change 이벤트가 updateTotalSum 함수 내에 있으면 change 이벤트가 일어나야지만 실행이 되어서 빼줬음
    $(".item-check").change(function () {
        updateTotalSum();
    });

    //장바구니에 딱 들어왔을 때부터 총액 계산되어있게 하려고 분리함
    updateTotalSum()

    // 장바구니에 상품가격 콤마 찍기
    $(".price-class").each(function () {
        let price = $(this).data("price");
        console.log(price);
        $(this).text(numberWithCommas(price));
    });


    // $(".orderQty-class").on("input", function () {
    //     let orderQty = $(this).data("order-qty");
    //     console.log(orderQty);
    //     $(this).text(numberWithCommas(orderQty));
    // });

    //장바구니에 구매금액(총액) 콤마 찍기
    $(".sum-class").each(function () {
        let sum = $(this).data("sum");
        console.log(sum);
        $(this).text(numberWithCommas(sum));
    });


</script>

<script src="/js/cart-check.js"></script>



{{> layout/footer}}