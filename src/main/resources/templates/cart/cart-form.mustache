{{> layout/header}}
<style>
</style>

<div class="container sub-page" style="text-align: center">
    <div class="cart-w d-flex">
        <div class="cart-L">
            <table class="table table-striped" style="vertical-align: middle">
                <tr>
                    <th>번호</th>
                    <th>상품명</th>
                    <th>구매수량</th>
                    <th>상품가격</th>
                    <th>총액</th>
                    <th>선택하기</th>
                </tr>

            <tr class="cart-table my-cart-list" id="cart-id">
                {{#cartList}}
                    <td>{{indexNum}}</td>
                    <td>
                        <div style="width:150px; margin:0 auto;">
                            <img src="/upload/{{img}}" alt="Product Image" style="max-width: 100%; max-height: 100%;">
                        </div>
                        {{pName}}
                    </td>

                    <td colspan="2">
                        <!-- 상품의 구매 수량만큼 표시됩니다 value 명에 변수 값만 넣어주세요-->
                        <div class="quantity-controls d-flex"
                             style="width: 100px; text-align: center; ">
                            <button type="button" class="decrease-btn" aria-label="수량내리기" style="">-
                            </button>
                            <input type="text" class="quantity orderQty" name="orderQty" value="{{orderQty}}"
                                   style="text-align: center; ">
                            <button type="button" class="increase-btn" aria-label="수량올리기">+</button>
                        </div>
                    </td>

                    <td class="price-class">{{price}}</td>

                    <td class="sum-class">{{sum}}</td>

                    <td>
                        <input class="form-check-input product-checkbox item-check" type="checkbox" name="itemCheck"
                               id="itemCheck-id" style="width:20px !important; margin: 0 auto">
                    </td>
                </tr>
                {{/cartList}}

            </table>

            <!-- 총합계 계산하는 것 -->
            <div class="summary-list" style="width: 30%;">
                <!-- 목록 리스트 1-->
                <ul class="list-group mb-3">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div class="flex-fill">
                            <span style="padding-right: 40px;">합계 (원)</span>
                            <strong class="totalSum">0</strong>
                        </div>
                    </li>
                </ul>
            </div>
            <!-- 총합계 계산하는 것 -->

            <button type="button" class="btn btn-warning" id="purchaseButton" style="width:300px">주문하기</button>

        </div>
    </div>
</div>

<script>
    let cartSaveList = [];

    document.querySelector("#purchaseButton").addEventListener("click", function (e) {
        e.preventDefault(); // 기본 폼 제출을 방지

        let checkedCarts = [];

        // 선택된 상품을 확인하고 리스트에 추가
        document.querySelectorAll(".item-check:checked").forEach(checkbox => {
            let cartId = checkbox.id.split('-')[1];
            let orderQty = document.querySelector(`#cart-${cartId} .cart-qty`).value;

            let checkedCart = {
                cartId: cartId,
                orderQty: orderQty,
                status: checkbox.checked ? true : false // 체크 여부에 따라 상태 설정
            };

            checkedCarts.push(checkedCart);
        });

        console.log(checkedCarts);

        // AJAX 요청으로 선택된 상품을 서버로 전송
        $.ajax({
            url: '#',
            data: JSON.stringify(checkedCarts),
            contentType: 'application/json; charset=utf-8',
            type: 'POST'
        }).done((res) => {
            alert(`결과: ${res}`);
            location.href = "#";
        }).fail((res) => {
            // 오류 처리
        });
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // 수량 증가 버튼 클릭 이벤트
        $(".increase-btn").click(function () {
            // var $quantityInput = $(this).siblings(".quantity");
            // var currentQuantity = parseInt($quantityInput.val());
            // $quantityInput.val(currentQuantity + 1);

            var $quantityInput = $(this).siblings(".quantity");
            var $price = $(this).closest("tr").find(".price-class").text(); // 상품 가격 가져오기
            var currentQuantity = parseInt($quantityInput.val());
            var newQuantity = currentQuantity + 1;
            $quantityInput.val(newQuantity); // 수량 업데이트
            updateSum($(this), $price, newQuantity); // 합계 업데이트

        });

        // 수량 감소 버튼 클릭 이벤트
        $(".decrease-btn").click(function () {
            // var $quantityInput = $(this).siblings(".quantity");
            // var currentQuantity = parseInt($quantityInput.val());
            // if (currentQuantity > 1) {
            //     $quantityInput.val(currentQuantity - 1);
            // }

            var $quantityInput = $(this).siblings(".quantity");
            var $price = $(this).closest("tr").find(".price-class").text(); // 상품 가격 가져오기
            var currentQuantity = parseInt($quantityInput.val());
            if (currentQuantity > 1) {
                var newQuantity = currentQuantity - 1;
                $quantityInput.val(newQuantity); // 수량 업데이트
                updateSum($(this), $price, newQuantity); // 합계 업데이트

            }
        });

        // 합계 업데이트 함수
        function updateSum($element, price, quantity) {
            var sum = parseInt(price) * quantity; // 새 합계 계산
            $element.closest("tr").find(".sum-class").text(sum); // 합계 텍스트 업데이트
        }

        // 수량 입력 필드 값이 변경될 때 이벤트 처리
        $(".quantity").on("input", function () {
            var $quantityInput = $(this); // 현재 수정된 수량 입력 필드
            var $price = $(this).closest("tr").find(".price-class").text(); // 상품 가격 가져오기
            var currentQuantity = parseInt($quantityInput.val()); // 현재 입력된 수량
            if (!isNaN(currentQuantity)) { // 입력된 값이 숫자인 경우에만 처리
                updateSum($(this), $price, currentQuantity); // 합계 업데이트
            }
        });

        // 재고 수량 계산하여 표시
        var productQty = parseInt("{qty}}");
        var orderQty = parseInt($(".quantity").val());
        var remainingQty = productQty - orderQty;
        $(".remaining-qty").text("재고 수량: " + remainingQty);
    });
</script>

<script src="/js/sum-calculate.js"></script>


{{> layout/footer}}